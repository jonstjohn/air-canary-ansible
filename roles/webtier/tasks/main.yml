- name: python - install pip
  apt: pkg=python-pip

- name: python - virtualenv
  apt: pkg=python-virtualenv

- name: python - install dev
  apt: pkg=python-dev

- name: python - pip upgrade
  pip: name=pip extra_args='--upgrade'

- name: python - virtualenvwrapper
  pip: name=virtualenvwrapper

- name: postgresql client
  apt: pkg=postgresql-client

- name: lib32z1-dev
  apt: pkg=lib32z1-dev

- name: uwsgi
  pip: name=uwsgi

- name: nginx
  apt: pkg=nginx

- name: git
  apt: pkg=git

- name: install uwsgi system wide
  pip: name=uwsgi

- name: make sure {{ home_dir }}/logs exists
  file: path={{ home_dir }}/logs state=directory owner={{ username }} group={{ username }}

- name: remove nginx default site
  file: path=/etc/nginx/sites-enabled/default state=absent

- name: copy nginx site file
  template: src=nginx.j2 dest=/etc/nginx/sites-available/{{ project_name }}

- name: symlink nginx site file
  file: path=/etc/nginx/sites-enabled/{{ project_name }} src=/etc/nginx/sites-available/{{ project_name }} state=link

# in code base
#- name: copy uwsgi_params
#  copy: src=uwsgi_params dest={{ home_dir }}

- name: copy uwsgi.ini
  template: src=uwsgi.ini.j2 dest={{ home_dir }}/uwsgi.ini

- name: create uwsgi config directories
  file: path=/etc/uwsgi/vassals state=directory

- name: uwsgi symlink
  file: path=/etc/uwsgi/vassals/uwsgi.ini src={{ home_dir }}/uwsgi.ini state=link

- name: create uwsgi log file
  file: path={{ wsgi_log_path }} state=touch owner=www-data group=adm

- name: uwsgi upstart
  template: src=uwsgi.conf.j2 dest=/etc/init/uwsgi.conf

- name: restart nginx
  service: name=nginx state=restarted

- name: restart uwsgi
  service: name=uwsgi state=restarted
